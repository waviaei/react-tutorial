{"version":3,"sources":["Table.js","Form.js","App.js","index.js"],"names":["TableHeader","TableBody","props","rows","characterData","map","row","index","key","name","job","age","onClick","removeCharacter","Table","Form","initialState","state","handleChange","event","target","value","setState","submitForm","handleSubmit","this","htmlFor","type","id","onChange","Component","App","characters","filter","character","i","className","ReactDOM","render","document","getElementById"],"mappings":"qQAEMA,EAAc,WAChB,OACI,+BACI,4BACI,oCACA,mCACA,mCACA,0CAMVC,EAAY,SAACC,GACf,IAAMC,EAAOD,EAAME,cAAcC,KAAI,SAACC,EAAKC,GACvC,OACI,wBAAIC,IAAKD,GACL,4BAAKD,EAAIG,MACT,4BAAKH,EAAII,KACT,4BAAKJ,EAAIK,IAAI,cACb,4BACI,4BAAQC,QAAS,kBAAMV,EAAMW,gBAAgBN,KAA7C,eAKhB,OACI,+BACKJ,IAgBEW,EAXD,SAACZ,GAAW,IACdE,EAAmCF,EAAnCE,cAAeS,EAAoBX,EAApBW,gBAEvB,OACI,+BACI,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAWT,cAAeA,EAAeS,gBAAiBA,M,OCcvDE,E,2MApDXC,aAAe,CACXP,KAAM,GACNC,IAAK,GACLC,IAAK,I,EAGTM,MAAQ,EAAKD,a,EAEbE,aAAe,SAAAC,GAAU,IAAD,EACIA,EAAMC,OAAtBX,EADY,EACZA,KAAMY,EADM,EACNA,MACd,EAAKC,SAAL,eACKb,EAAOY,K,EAIhBE,WAAa,WACT,EAAKrB,MAAMsB,aAAa,EAAKP,OAC7B,EAAKK,SAAS,EAAKN,e,wEAGb,IAAD,EACsBS,KAAKR,MAAxBR,EADH,EACGA,KAAMC,EADT,EACSA,IAAKC,EADd,EACcA,IAEnB,OACI,8BACI,2BAAOe,QAAQ,QAAf,QACA,2BACIC,KAAK,OACLlB,KAAK,OACLmB,GAAG,OACHP,MAAOZ,EACPoB,SAAUJ,KAAKP,eACnB,2BAAOQ,QAAQ,OAAf,OACA,2BACCC,KAAK,OACLlB,KAAK,MACLmB,GAAG,MACHP,MAAOX,EACPmB,SAAUJ,KAAKP,eACf,2BAAOQ,QAAQ,OAAf,OACD,2BACCC,KAAK,OACLlB,KAAK,MACLmB,GAAG,MACHP,MAAOV,EACPkB,SAAUJ,KAAKP,eAChB,2BAAOS,KAAK,SAASN,MAAM,SAAST,QAASa,KAAKF,kB,GA/C/CO,aCsCJC,E,2MAhCXd,MAAQ,CACJe,WAAY,I,EAGhBnB,gBAAkB,SAAAN,GAAU,IAChByB,EAAe,EAAKf,MAApBe,WAER,EAAKV,SAAS,CACVU,WAAYA,EAAWC,QAAO,SAACC,EAAWC,GACtC,OAAOA,IAAM5B,Q,EAKzBiB,aAAe,SAAAU,GACX,EAAKZ,SAAS,CAAEU,WAAW,GAAD,mBAAM,EAAKf,MAAMe,YAAjB,CAA6BE,O,wEAGjD,IAEEF,EAAeP,KAAKR,MAApBe,WAER,OACI,yBAAKI,UAAU,aACX,kBAAC,EAAD,CAAOhC,cAAe4B,EAAYnB,gBAAiBY,KAAKZ,kBACxD,kBAAC,EAAD,CAAMW,aAAcC,KAAKD,oB,GA3BvBM,a,MCClBO,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.78f60cff.chunk.js","sourcesContent":["import React, { Component } from 'react'\n\nconst TableHeader = () => {\n    return(\n        <thead>\n            <tr>\n                <th>Name</th>\n                <th>Job</th>\n                <th>Age</th>\n                <th>Action!</th>\n            </tr>\n        </thead>\n    )\n}\n\nconst TableBody = (props) => {\n    const rows = props.characterData.map((row, index) => {\n        return (\n            <tr key={index}>\n                <td>{row.name}</td>\n                <td>{row.job}</td>\n                <td>{row.age+\" years old\"}</td>\n                <td>\n                    <button onClick={() => props.removeCharacter(index)}>Delete</button>\n                </td>\n            </tr>\n        )\n    })\n    return (\n        <tbody>\n            {rows}\n        </tbody>\n    )\n}\n\nconst Table = (props) => {\n    const { characterData, removeCharacter } = props;\n\n    return(\n        <table>\n            <TableHeader />\n            <TableBody characterData={characterData} removeCharacter={removeCharacter} />\n        </table>\n    );\n}\n\nexport default Table","import React, { Component } from 'react'\n\nclass Form extends Component {\n    initialState = {\n        name: '',\n        job: '',\n        age: ''\n    }\n\n    state = this.initialState\n\n    handleChange = event => {\n        const { name, value } = event.target\n        this.setState({\n            [name]: value,\n        })\n    }\n\n    submitForm = () => {\n        this.props.handleSubmit(this.state)\n        this.setState(this.initialState)\n    }\n\n    render() {\n        const { name, job, age } = this.state\n\n        return (\n            <form>\n                <label htmlFor=\"name\">Name</label>\n                <input \n                    type=\"text\"\n                    name=\"name\"\n                    id=\"name\"\n                    value={name}\n                    onChange={this.handleChange} />\n                <label htmlFor=\"job\">Job</label>\n                <input\n                 type=\"text\"\n                 name=\"job\"\n                 id=\"job\"\n                 value={job}\n                 onChange={this.handleChange} />\n                 <label htmlFor=\"age\">Age</label>\n                <input\n                 type=\"text\"\n                 name=\"age\"\n                 id=\"age\"\n                 value={age}\n                 onChange={this.handleChange} />\n                <input type=\"button\" value=\"Submit\" onClick={this.submitForm} />\n            </form>\n        );\n    }\n}\n\nexport default Form;","import React, { Component } from 'react'\nimport Table from './Table'\nimport Form from './Form'\n\n\n\nclass App extends Component {\n\n    state = {\n        characters: [],\n    }\n\n    removeCharacter = index => {\n        const { characters } = this.state\n    \n        this.setState({\n            characters: characters.filter((character, i) => {\n                return i !== index\n            }),\n        })\n    }\n\n    handleSubmit = character => {\n        this.setState({ characters: [...this.state.characters, character] })\n    }\n\n    render() {\n        \n        const { characters } = this.state\n        \n        return(\n            <div className=\"container\">\n                <Table characterData={characters} removeCharacter={this.removeCharacter} />\n                <Form handleSubmit={this.handleSubmit} />\n            </div>\n        )\n\n    }\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n//import App from './Api'\nimport './index.css'\n\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}